{"version":3,"file":"static/webpack/static/development/pages/play.js.1eba05e647b80c16b504.hot-update.js","sources":["webpack:///./src/pages/play.js"],"sourcesContent":["import { useEffect, useRef } from 'react';\nimport * as yaksok from 'yaksok';\n\nfunction Page() {\n    const examplesSelectRef = useRef();\n    const srcEditorElementRef = useRef();\n    const dstEditorElementRef = useRef();\n    const srcEditorRef = useRef();\n    const dstEditorRef = useRef();\n    const loadExample = async file => {\n        const text = await fetch('/examples/' + file).then(res => res.text());\n        if (!srcEditorRef.current) return;\n        srcEditorRef.current.setValue(text);\n        srcEditorRef.current.execCommand('gotoend');\n    };\n    const execute = () => {\n        if (!dstEditor.current) return;\n        eval(dstEditor.current.getValue());\n    };\n    useEffect(() => {\n        const srcEditor = ace.edit(srcEditorElementRef.current);\n        const dstEditor = ace.edit(dstEditorElementRef.current);\n        srcEditorRef.current = srcEditor;\n        dstEditorRef.current = dstEditor;\n        const compiler = new yaksok.compiler.JsTargetCompiler();\n        compiler.plugins.add(new yaksok.plugin.ConstantFolder({ dce: true }));\n        compiler.plugins.add(new yaksok.plugin.UnusedDefRemover());\n        let current = 0;\n        let lastModified = 0;\n        let compiling = false;\n        function compile() { lastModified = +(new Date()); }\n        function editorConfig(editor, option) {\n            editor.setOptions({\n                selectionStyle: 'text',\n                useSoftTabs: true,\n                highlightActiveLine: false,\n                showPrintMargin: false,\n                theme: 'ace/theme/monokai'\n            });\n            if (option) {\n                editor.setOptions(option);\n            }\n        }\n        { // src config\n            editorConfig(srcEditor);\n            const YaksokMode = ace.require('ace/mode/yaksok').Mode;\n            srcEditor.getSession().setMode(new YaksokMode());\n        }\n        { // dst config\n            editorConfig(dstEditor, {\n                readOnly: true,\n                mode: 'ace/mode/javascript'\n            });\n        }\n        loadExample(examplesSelectRef.current.value);\n        srcEditor.getSession().on('change', compile);\n        setInterval(async function () {\n            if (current > lastModified) return;\n            if (compiling) return;\n            compiling = true;\n            try {\n                const js = await compiler.compile(srcEditor.getValue() || '');\n                dstEditor.setValue(js);\n                dstEditor.execCommand('gotoend');\n                current = +(new Date());\n                compiling = false;\n            } catch (err) {\n                const msg = ((err instanceof Error || err.message) ? err.message : err) + '';\n                dstEditor.setValue(msg);\n                dstEditor.execCommand('gotoend');\n                current = +(new Date());\n                compiling = false;\n            }\n        }, 1);\n    }, []);\n    return <>\n        <div className=\"wrap\">\n            <div className=\"col left\">\n                <div className=\"row\">\n                    <div className=\"title\">약속 소스코드</div>\n                    <select\n                        ref={examplesSelectRef}\n                        id=\"examples\"\n                        onChange={e => loadExample(e.target.value)}>\n                        <option value=\"fibonacci.yak\">피보나치</option>\n                        <option value=\"bubble-sort.yak\">버블소트</option>\n                    </select>\n                </div>\n                <div ref={srcEditorElementRef} id=\"src-editor\" className=\"editor\"></div>\n            </div>\n            <div className=\"col right\">\n                <div className=\"row\">\n                    <div className=\"title\">자바스크립트 결과코드</div>\n                    <button id=\"run\" onClick={execute}>실행하기</button>\n                </div>\n                <div ref={dstEditorElementRef} id=\"dst-editor\" className=\"editor\"></div>\n            </div>\n        </div>\n        <style global jsx>{`\n            .wrap {\n                margin: 0 auto;\n                max-width: 1024px;\n                width: calc(100% - 40px);\n                height: calc(100% - 20px);\n            }\n            .col {\n                width: calc(50% - 5px);\n                height: 100%;\n            }\n            .col.left { float: left; }\n            .col.right { float: right; }\n            .row {\n                margin: 5px 0;\n                width: 100%;\n                height: 30px;\n            }\n            .row .title {\n                display: inline-block;\n                height: 100%;\n                padding: 1px 5px;\n                font-size: 18px;\n                font-weight: lighter;\n            }\n            .editor {\n                width: 100%;\n                height: calc(100% - 40px);\n            }\n        `}</style>\n    </>;\n}\n\nexport default Page;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAFA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAGA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAMA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAGA;AAHA;AAAA;AAAA;AACA;AADA;AAKA;AACA;AACA;AACA;AACA;AATA;AAAA;AACA;AADA;AAAA;AAAA;AAWA;AACA;AACA;AACA;AACA;AACA;AAhBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkpBA;AAAA;AAAA;AAsDA;AACA;AACA;;;;A","sourceRoot":""}